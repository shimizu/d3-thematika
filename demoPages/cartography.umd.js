!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3-selection"),require("d3-geo")):"function"==typeof define&&define.amd?define(["exports","d3-selection","d3-geo"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Cartography={},t.d3,t.d3)}(this,function(t,e,r){"use strict";class s{constructor(){this.layerInstances=new Map}setContext(t,e){this.svgContainer=t,this.projection=e}addLayer(t,e){if(!this.svgContainer)throw new Error("SVG container not set. Call setContext() first.");this.projection&&this.isGeojsonLayer(e)&&e.setProjection(this.projection),e.zIndex=this.getNextZIndex(),e.render(this.svgContainer),this.layerInstances.set(t,e)}removeLayer(t){const e=this.layerInstances.get(t);e&&(e.destroy(),this.layerInstances.delete(t))}updateLayerStyle(t,e){const r=this.layerInstances.get(t);r&&r.setStyle(e)}setLayerVisibility(t,e){const r=this.layerInstances.get(t);r&&r.setVisible(e)}setLayerZIndex(t,e){const r=this.layerInstances.get(t);if(r){const t=r.zIndex;r.setZIndex(e),t!==e&&this.reorderLayersOptimized()}}getLayer(t){return this.layerInstances.get(t)}getLayerIds(){return Array.from(this.layerInstances.keys())}clearAllLayers(){this.layerInstances.forEach(t=>t.destroy()),this.layerInstances.clear()}rerenderAllLayers(){if(this.svgContainer){Array.from(this.layerInstances.values()).sort((t,e)=>t.zIndex-e.zIndex).forEach(t=>{t.destroy(),this.projection&&this.isGeojsonLayer(t)&&t.setProjection(this.projection),t.render(this.svgContainer)})}}reorderLayersOptimized(){const t=[];if(Array.from(this.layerInstances.values()).filter(t=>t.isRendered()).forEach(e=>{const r=this.getLayerElement(e);r&&t.push({element:r,zIndex:e.zIndex})}),0===t.length)return;t.sort((t,e)=>t.zIndex-e.zIndex);const e=t[0].element.parentNode;e&&t.forEach(({element:t})=>{e.appendChild(t)})}updateProjection(t){this.projection=t,this.layerInstances.forEach(e=>{this.isGeojsonLayer(e)&&e.setProjection(t)})}getNextZIndex(){if(0===this.layerInstances.size)return 0;return Math.max(...Array.from(this.layerInstances.values()).map(t=>t.zIndex))+1}isGeojsonLayer(t){return"setProjection"in t}getLayerElement(t){if("element"in t)return t.element}}class a{constructor(t,e={}){this.visible=!0,this.zIndex=0,this.id=t,this.style={fill:"#cccccc",stroke:"#333333",strokeWidth:.5,opacity:1,...e}}destroy(){this.element&&(this.element.remove(),this.element=void 0)}setStyle(t){this.style={...this.style,...t},this.updateStyle()}setVisible(t){this.visible=t,this.updateVisibility()}setZIndex(t){this.zIndex=t}isRendered(){return void 0!==this.element}updateStyle(){if(!this.element)return;e.select(this.element).selectAll("path").style("fill",(t,e)=>{const r=t;return"function"==typeof this.style.fill?this.style.fill(r,e):this.style.fill||null}).style("stroke",(t,e)=>{const r=t;return"function"==typeof this.style.stroke?this.style.stroke(r,e):this.style.stroke||null}).style("stroke-width",(t,e)=>{const r=t;return"function"==typeof this.style.strokeWidth?this.style.strokeWidth(r,e):this.style.strokeWidth||null}).style("stroke-dasharray",(t,e)=>{const r=t;return"function"==typeof this.style.strokeDasharray?this.style.strokeDasharray(r,e):this.style.strokeDasharray||null}).style("opacity",(t,e)=>{const r=t;return"function"==typeof this.style.opacity?this.style.opacity(r,e):this.style.opacity||null}).attr("filter",(t,e)=>{const r=t;return"function"==typeof this.style.filter?this.style.filter(r,e):this.style.filter||null})}updateVisibility(){if(!this.element)return;e.select(this.element).style("display",this.visible?"":"none")}createLayerGroup(t){const e=t.append("g").attr("class",`cartography-layer cartography-layer--${this.id}`).style("display",this.visible?"":"none");return this.element=e.node(),e}applyStylesToElement(t,e,r){a.STYLE_PROPERTIES.forEach(({key:s,method:a,attr:i})=>{const o=this.style[s],n=i||s;if(void 0!==o){const s="function"==typeof o?o(e||{},r||0):o;t[a](n,s)}})}applyStylesToElements(t,e){a.STYLE_PROPERTIES.forEach(({key:r,method:s,attr:a})=>{const i=this.style[r],o=a||r;"function"==typeof i?t[s](o,(t,e)=>i(t,e)):void 0!==i&&e[s](o,i)})}}a.STYLE_PROPERTIES=[{key:"fill",method:"attr"},{key:"stroke",method:"attr"},{key:"strokeWidth",method:"attr",attr:"stroke-width"},{key:"strokeDasharray",method:"attr",attr:"stroke-dasharray"},{key:"opacity",method:"attr"},{key:"filter",method:"attr"}];function i(t){const e=e=>{const r=e.append("filter").attr("id",t.id);t.x&&r.attr("x",t.x),t.y&&r.attr("y",t.y),t.width&&r.attr("width",t.width),t.height&&r.attr("height",t.height),r.append("feGaussianBlur").attr("stdDeviation",t.stdDeviation)};return e.url=()=>h(t.id),e}function o(t){const e=e=>{const r=e.append("defs").append("filter").attr("id",t.id).append("feDropShadow").attr("dx",t.dx).attr("dy",t.dy).attr("stdDeviation",t.stdDeviation);t.floodColor&&r.attr("flood-color",t.floodColor),void 0!==t.floodOpacity&&r.attr("flood-opacity",t.floodOpacity)};return e.url=()=>h(t.id),e}function n(t){const e=e=>{const r=e.append("defs").append("filter").attr("id",t.id).attr("x","-50%").attr("y","-50%").attr("width","200%").attr("height","200%");if(void 0!==t.threshold){const e=[.2126,.7152,.0722,0,t.threshold,.2126,.7152,.0722,0,t.threshold,.2126,.7152,.0722,0,t.threshold,0,0,0,1,0].join(" ");r.append("feColorMatrix").attr("values",e).attr("result","bright")}r.append("feGaussianBlur").attr("in",void 0!==t.threshold?"bright":"SourceGraphic").attr("stdDeviation",t.intensity).attr("result","bloom"),t.color&&(r.append("feFlood").attr("flood-color",t.color).attr("result","color"),r.append("feComposite").attr("in","color").attr("in2","bloom").attr("operator","in").attr("result","coloredBloom")),r.append("feMerge").selectAll("feMergeNode").data(["SourceGraphic",t.color?"coloredBloom":"bloom"]).enter().append("feMergeNode").attr("in",t=>t)};return e.url=()=>h(t.id),e}const l={lightBlur:()=>i({id:"lightBlur",stdDeviation:2}),strongBlur:()=>i({id:"strongBlur",stdDeviation:8}),standardDropShadow:()=>o({id:"standardDropShadow",dx:3,dy:3,stdDeviation:2,floodColor:"#000000",floodOpacity:.3}),softDropShadow:()=>o({id:"softDropShadow",dx:2,dy:2,stdDeviation:4,floodColor:"#000000",floodOpacity:.2}),standardBloom:()=>n({id:"standardBloom",intensity:4,threshold:.8}),strongBloom:()=>n({id:"strongBloom",intensity:8,threshold:.6,color:"#ffffff"})};function h(t){return`url(#${t})`}function d(t,e,r,s,a,i){switch(t.type){case"Point":i(t.coordinates,e,r,s,a);break;case"LineString":case"MultiPoint":t.coordinates.forEach(t=>{i(t,e,r,s,a)});break;case"Polygon":t.coordinates.forEach(t=>{t.forEach(t=>{i(t,e,r,s,a)})});break;case"MultiLineString":t.coordinates.forEach(t=>{t.forEach(t=>{i(t,e,r,s,a)})});break;case"MultiPolygon":t.coordinates.forEach(t=>{t.forEach(t=>{t.forEach(t=>{i(t,e,r,s,a)})})});break;case"GeometryCollection":t.geometries.forEach(t=>{d(t,e,r,s,a,i)})}}t.BaseLayer=a,t.Cartography=class{constructor(t){if(this.width=t.width,this.height=t.height,this.container=e.select(t.container),this.container.empty())throw new Error(`Container not found: ${t.container}`);this.container.selectAll("svg.cartography-map").remove(),this.svg=this.container.append("svg").attr("width",this.width).attr("height",this.height).attr("class","cartography-map"),this.initializeDefs(t.defs),this.svgGroup=this.svg.append("g").attr("class","cartography-main-group"),this.projection=t.projection,this.layerManager=new s,this.layerManager.setContext(this.svgGroup,this.projection)}addLayer(t,e){this.layerManager.addLayer(t,e)}removeLayer(t){this.layerManager.removeLayer(t)}updateLayerStyle(t,e){this.layerManager.updateLayerStyle(t,e)}setLayerVisibility(t,e){this.layerManager.setLayerVisibility(t,e)}setLayerZIndex(t,e){this.layerManager.setLayerZIndex(t,e)}setProjection(t){this.projection=t,this.layerManager.updateProjection(this.projection),this.layerManager.rerenderAllLayers()}resize(t,e){this.width=t,this.height=e,this.svg.attr("width",t).attr("height",e),this.layerManager.updateProjection(this.projection),this.layerManager.rerenderAllLayers()}fitBounds(t,e=20){const[[r,s],[a,i]]=this.projection.invert?[this.projection([t[0],t[3]]),this.projection([t[2],t[1]])]:[[0,0],[this.width,this.height]],o=Math.min((this.width-2*e)/Math.abs(a-r),(this.height-2*e)/Math.abs(i-s)),n=[this.width/2-o*(r+a)/2,this.height/2-o*(s+i)/2];this.projection.scale(o).translate(n),this.layerManager.updateProjection(this.projection),this.layerManager.rerenderAllLayers()}clearAllLayers(){this.layerManager.clearAllLayers()}getSVG(){return this.svg.node()}getProjection(){return this.projection}getLayerManager(){return this.layerManager}getSize(){return[this.width,this.height]}getLayerIds(){return this.layerManager.getLayerIds()}initializeDefs(t){t&&t.forEach(t=>{this.svg.call(t)})}},t.FilterPresets=l,t.GeojsonLayer=class extends a{constructor(t){super(`geojson-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,t.attr||t.style),this.data=Array.isArray(t.data)?{type:"FeatureCollection",features:t.data}:t.data}setProjection(t){this.path=r.geoPath(t),this.layerGroup&&this.update()}render(t){this.layerGroup=this.createLayerGroup(t),this.renderFeatures()}update(){this.layerGroup&&(this.layerGroup.selectAll("path").remove(),this.renderFeatures())}updateProjection(t){this.path=r.geoPath(t),this.update()}updateData(t){this.data=Array.isArray(t)?{type:"FeatureCollection",features:t}:t,this.update()}on(t,e){this.layerGroup&&this.layerGroup.selectAll("path").on(t,function(t,r){e(t,r)})}renderFeatures(){if(!this.layerGroup||!this.path)return;const t=this.layerGroup.selectAll("path").data(this.data.features).enter().append("path").attr("d",this.path).attr("class",t=>["cartography-feature",this.style.className||"",t.properties?.class||""].filter(Boolean).join(" ")).style("cursor","pointer");this.applyStylesToElements(t,this.layerGroup)}getData(){return this.data}},t.GraticuleLayer=class extends a{constructor(t={}){super(`graticule-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,{fill:"none",stroke:"#cccccc",strokeWidth:.5,opacity:.7,...t.attr||t.style}),this.step=t.step||[10,10],this.extent=t.extent}setProjection(t){this.path=r.geoPath(t),this.layerGroup&&this.update()}render(t){this.layerGroup=this.createLayerGroup(t),this.renderGraticule()}update(){this.layerGroup&&(this.layerGroup.selectAll("path").remove(),this.renderGraticule())}setStep(t){this.step=t,this.update()}setExtent(t){this.extent=t,this.update()}renderGraticule(){if(!this.layerGroup||!this.path)return;const t=r.geoGraticule().step(this.step);this.extent&&t.extent(this.extent);const e=t(),s=this.layerGroup.append("path").datum(e).attr("d",this.path).attr("class",()=>["cartography-graticule",this.style.className||""].filter(Boolean).join(" "));this.applyStylesToElement(s,e,0)}getStep(){return this.step}getExtent(){return this.extent}},t.LayerManager=s,t.OutlineLayer=class extends a{constructor(t={}){super(`outline-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,{fill:"none",stroke:"#333333",strokeWidth:1,opacity:1,...t.attr||t.style}),this.createClipPath=t.createClipPath??!1,this.clipPathId=t.clipPathId||`outline-clip-${this.id}`}setProjection(t){this.path=r.geoPath(t),this.layerGroup&&this.update()}render(t){this.layerGroup=this.createLayerGroup(t),this.renderOutline()}update(){this.layerGroup&&(this.layerGroup.selectAll("path").remove(),this.renderOutline())}renderOutline(){if(!this.layerGroup||!this.path)return;const t={type:"Sphere"},r=this.path(t);if(this.createClipPath&&r){const t=this.layerGroup.node()?.closest("svg");if(t){const s=e.select(t);s.select(`#${this.clipPathId}`).remove();let a=s.select("defs");a.empty()&&(a=s.insert("defs",":first-child"));a.append("clipPath").attr("id",this.clipPathId).append("path").attr("d",r);const i=s.select(".cartography-main-group");i.empty()||i.attr("clip-path",this.getClipPathUrl())}}const s=this.layerGroup.append("path").datum(t).attr("d",this.path).attr("class",()=>["cartography-outline",this.style.className||""].filter(Boolean).join(" "));this.applyStylesToElement(s,t,0)}getClipPathId(){return this.clipPathId}getClipPathUrl(){return`url(#${this.clipPathId})`}},t.chainFilters=function(t){return t.map(t=>`url(#${t})`).join(" ")},t.createBloom=n,t.createCustomFilter=function(t,e){return r=>{r.append("g").html(`<filter id="${t}">${e}</filter>`)}},t.createDropShadow=o,t.createGaussianBlur=i,t.getFilterUrl=h,t.logTestResult=function(t,e=!1){console.log("=== 座標変換テスト結果 ==="),console.log(`総座標数: ${t.totalCoords}`),console.log(`正常座標数: ${t.normalCoords}`),console.log(`異常座標数: ${t.abnormalCoords}`),console.log(t.summary),e&&t.abnormalCoords>0&&(console.warn("異常値の詳細:"),t.abnormalDetails.forEach((t,e)=>{console.warn(`  ${e+1}. ${t.featureName}: [${t.originalCoord}] → [${t.projectedCoord.map(t=>t.toFixed(2))}] (${t.outOfBounds.x}, ${t.outOfBounds.y})`)}))},t.testProjectionBounds=function(t,e){try{let r=1/0,s=-1/0,a=1/0,i=-1/0;e.features.forEach(e=>{d(e.geometry,"",t,0,0,t=>{const[e,o]=t;r=Math.min(r,e),s=Math.max(s,e),a=Math.min(a,o),i=Math.max(i,o)})});const o=[[r,a],[s,a],[s,i],[r,i]],n=o.map(e=>t(e)).filter(t=>null!==t);return n.length===o.length?{isValid:!0,message:"✅ 投影法の境界設定は正常です"}:{isValid:!1,message:`⚠️ 投影法で変換できない座標があります (${o.length-n.length}個)`}}catch(t){return{isValid:!1,message:`❌ 境界テスト中にエラーが発生しました: ${t instanceof Error?t.message:"Unknown error"}`}}},t.testProjectionTransform=function(t,e,r,s){let a=0,i=0;const o=[];s.features.forEach(s=>{const n=s.properties?.name||`Feature ${s.id||"unknown"}`;d(s.geometry,n,r,t,e,(t,e,r,s,n)=>{const l=r([t[0],t[1]]);l&&(a++,(l[0]<0||l[0]>s||l[1]<0||l[1]>n)&&(i++,o.push({featureName:e,originalCoord:[t[0],t[1]],projectedCoord:[l[0],l[1]],outOfBounds:{x:l[0]<0?"x < 0":l[0]>s?`x > ${s}`:"x OK",y:l[1]<0?"y < 0":l[1]>n?`y > ${n}`:"y OK"}})))})});const n=0===i;return{totalCoords:a,normalCoords:a-i,abnormalCoords:i,abnormalDetails:o,isValid:n,summary:n?`✅ すべての座標が正常範囲内です (0-${t} × 0-${e})`:`⚠️ ${i}個の座標が範囲外です`}}});
//# sourceMappingURL=cartography.umd.js.map
