!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3-selection"),require("d3-geo")):"function"==typeof define&&define.amd?define(["exports","d3-selection","d3-geo"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Cartography={},t.d3,t.d3)}(this,function(t,e,r){"use strict";class s{constructor(t){this.svg=t.svg,this.path=r.geoPath(t.projection)}updateProjection(t){this.path=r.geoPath(t.projection)}renderLayer(t){const e=this.svg.append("g").attr("class",`cartography-layer cartography-layer--${t.id}`).style("display",!1===t.visible?"none":"");e.selectAll("path").data(t.data.features).enter().append("path").attr("d",this.path).attr("class",e=>`cartography-feature ${t.style.className||""}`).style("fill",e=>"function"==typeof t.style.fill?t.style.fill(e):t.style.fill||null).style("stroke",e=>"function"==typeof t.style.stroke?t.style.stroke(e):t.style.stroke||null).style("stroke-width",e=>"function"==typeof t.style.strokeWidth?t.style.strokeWidth(e):t.style.strokeWidth||null).style("opacity",e=>"function"==typeof t.style.opacity?t.style.opacity(e):t.style.opacity||null),t.element=e.node()}updateLayerStyle(t){if(!t.element)return;this.svg.select(`.cartography-layer--${t.id}`).selectAll("path").style("fill",e=>{const r=e;return"function"==typeof t.style.fill?t.style.fill(r):t.style.fill||null}).style("stroke",e=>{const r=e;return"function"==typeof t.style.stroke?t.style.stroke(r):t.style.stroke||null}).style("stroke-width",e=>{const r=e;return"function"==typeof t.style.strokeWidth?t.style.strokeWidth(r):t.style.strokeWidth||null}).style("opacity",e=>{const r=e;return"function"==typeof t.style.opacity?t.style.opacity(r):t.style.opacity||null})}toggleLayerVisibility(t){if(!t.element)return;this.svg.select(`.cartography-layer--${t.id}`).style("display",!1===t.visible?"none":"")}clearAllLayers(){this.svg.selectAll(".cartography-layer").remove()}removeLayer(t){this.svg.select(`.cartography-layer--${t}`).remove()}}class a{constructor(t){this.layers=new Map,this.renderer=t}addLayer(t,e){const r={id:t,data:Array.isArray(e.data)?{type:"FeatureCollection",features:e.data}:e.data,style:{fill:"#cccccc",stroke:"#333333",strokeWidth:.5,opacity:1,...e.style},visible:!0,zIndex:this.getNextZIndex()};this.layers.set(t,r),this.renderer.renderLayer(r)}removeLayer(t){this.layers.get(t)&&(this.renderer.removeLayer(t),this.layers.delete(t))}updateLayerStyle(t,e){const r=this.layers.get(t);r&&(r.style={...r.style,...e},this.renderer.updateLayerStyle(r))}setLayerVisibility(t,e){const r=this.layers.get(t);r&&(r.visible=e,this.renderer.toggleLayerVisibility(r))}setLayerZIndex(t,e){const r=this.layers.get(t);if(r){const t=r.zIndex||0;r.zIndex=e,t!==e&&this.reorderLayersOptimized()}}getLayer(t){return this.layers.get(t)}getLayerIds(){return Array.from(this.layers.keys())}clearAllLayers(){this.renderer.clearAllLayers(),this.layers.clear()}rerenderAllLayers(){this.renderer.clearAllLayers();Array.from(this.layers.values()).sort((t,e)=>(t.zIndex||0)-(e.zIndex||0)).forEach(t=>{t.element=void 0,this.renderer.renderLayer(t)})}reorderLayersOptimized(){const t=Array.from(this.layers.values()).filter(t=>t.element).sort((t,e)=>(t.zIndex||0)-(e.zIndex||0));if(0===t.length)return;const e=t[0].element.parentNode;e&&t.forEach(t=>{t.element&&e.appendChild(t.element)})}getNextZIndex(){if(0===this.layers.size)return 0;return Math.max(...Array.from(this.layers.values()).map(t=>t.zIndex||0))+1}reorderLayers(){this.reorderLayersOptimized()}}class o{constructor(t,e={}){this.visible=!0,this.zIndex=0,this.id=t,this.style={fill:"#cccccc",stroke:"#333333",strokeWidth:.5,opacity:1,...e}}destroy(){this.element&&(this.element.remove(),this.element=void 0)}setStyle(t){this.style={...this.style,...t},this.updateStyle()}setVisible(t){this.visible=t,this.updateVisibility()}setZIndex(t){this.zIndex=t}isRendered(){return void 0!==this.element}updateStyle(){if(!this.element)return;this.element.selectAll("path").style("fill",t=>{const e=t;return"function"==typeof this.style.fill?this.style.fill(e):this.style.fill||null}).style("stroke",t=>{const e=t;return"function"==typeof this.style.stroke?this.style.stroke(e):this.style.stroke||null}).style("stroke-width",t=>{const e=t;return"function"==typeof this.style.strokeWidth?this.style.strokeWidth(e):this.style.strokeWidth||null}).style("opacity",t=>{const e=t;return"function"==typeof this.style.opacity?this.style.opacity(e):this.style.opacity||null})}updateVisibility(){if(!this.element)return;this.element.style("display",this.visible?"":"none")}createLayerGroup(t){const e=t.append("g").attr("class",`cartography-layer cartography-layer--${this.id}`).style("display",this.visible?"":"none");return this.element=e.node(),e}}class i extends o{constructor(t,e,s,a={}){super(t,a),this.data=Array.isArray(e)?{type:"FeatureCollection",features:e}:e,this.path=r.geoPath(s)}render(t){this.layerGroup=this.createLayerGroup(t),this.renderFeatures()}update(){this.layerGroup&&(this.layerGroup.selectAll("path").remove(),this.renderFeatures())}updateProjection(t){this.path=r.geoPath(t),this.update()}updateData(t){this.data=Array.isArray(t)?{type:"FeatureCollection",features:t}:t,this.update()}on(t,e){this.layerGroup&&this.layerGroup.selectAll("path").on(t,function(t,r){e(t,r)})}renderFeatures(){this.layerGroup&&this.layerGroup.selectAll("path").data(this.data.features).enter().append("path").attr("d",this.path).attr("class",t=>["cartography-feature",this.style.className||"",t.properties?.class||""].filter(Boolean).join(" ")).style("fill",t=>"function"==typeof this.style.fill?this.style.fill(t):this.style.fill||null).style("stroke",t=>"function"==typeof this.style.stroke?this.style.stroke(t):this.style.stroke||null).style("stroke-width",t=>"function"==typeof this.style.strokeWidth?this.style.strokeWidth(t):this.style.strokeWidth||null).style("opacity",t=>"function"==typeof this.style.opacity?this.style.opacity(t):this.style.opacity||null).style("cursor","pointer")}updateFeatureStyle(t,e){this.layerGroup&&this.layerGroup.selectAll("path").filter(e=>t(e)).style("fill",t=>{const r=t,s=e.fill||this.style.fill;return"function"==typeof s?s(r):s||null}).style("stroke",t=>{const r=t,s=e.stroke||this.style.stroke;return"function"==typeof s?s(r):s||null}).style("stroke-width",t=>{const r=t,s=e.strokeWidth||this.style.strokeWidth;return"function"==typeof s?s(r):s||null}).style("opacity",t=>{const r=t,s=e.opacity||this.style.opacity;return"function"==typeof s?s(r):s||null})}getData(){return this.data}}function n(t){let e=1/0,r=1/0,s=-1/0,a=-1/0;function o(t){if(Array.isArray(t[0]))t.forEach(o);else{const[o,i]=t;e=Math.min(e,o),r=Math.min(r,i),s=Math.max(s,o),a=Math.max(a,i)}}return t.features.forEach(t=>{t.geometry&&"coordinates"in t.geometry&&o(t.geometry.coordinates)}),[e,r,s,a]}function l(t){return t*(Math.PI/180)}const h={fill:"#cccccc",stroke:"#333333",strokeWidth:.5,opacity:1,className:""};function c(t,e={}){return{...t,...e}}function y(t,e,r){const s=t=>{const e=Math.round(Math.max(0,Math.min(255,t))).toString(16);return 1===e.length?"0"+e:e};return`#${s(t)}${s(e)}${s(r)}`}function u(t,e,r){const s=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t),a=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);if(!s||!a)return t;const o=parseInt(s[1],16),i=parseInt(s[2],16),n=parseInt(s[3],16),l=parseInt(a[1],16),h=parseInt(a[2],16),c=parseInt(a[3],16);return y(Math.round(o+(l-o)*r),Math.round(i+(h-i)*r),Math.round(n+(c-n)*r))}function d(t,e,r,s,a,o){switch(t.type){case"Point":o(t.coordinates,e,r,s,a);break;case"LineString":case"MultiPoint":t.coordinates.forEach(t=>{o(t,e,r,s,a)});break;case"Polygon":t.coordinates.forEach(t=>{t.forEach(t=>{o(t,e,r,s,a)})});break;case"MultiLineString":t.coordinates.forEach(t=>{t.forEach(t=>{o(t,e,r,s,a)})});break;case"MultiPolygon":t.coordinates.forEach(t=>{t.forEach(t=>{t.forEach(t=>{o(t,e,r,s,a)})})});break;case"GeometryCollection":t.geometries.forEach(t=>{d(t,e,r,s,a,o)})}}t.BaseLayer=o,t.Cartography=class{constructor(t){if(this.width=t.width,this.height=t.height,this.container=e.select(t.container),this.container.empty())throw new Error(`Container not found: ${t.container}`);this.svg=this.container.append("svg").attr("width",this.width).attr("height",this.height).attr("class","cartography-map"),this.projection=t.projection,this.renderer=new s({svg:this.svg,projection:this.projection}),this.layerManager=new a(this.renderer)}addLayer(t,e){this.layerManager.addLayer(t,e)}addVectorLayer(t,e,r={}){const s=new i(t,e,this.projection,r),a=this.svg.append("g");return s.render(a),s}removeLayer(t){this.layerManager.removeLayer(t)}updateLayerStyle(t,e){this.layerManager.updateLayerStyle(t,e)}setLayerVisibility(t,e){this.layerManager.setLayerVisibility(t,e)}setLayerZIndex(t,e){this.layerManager.setLayerZIndex(t,e)}setProjection(t){this.projection=t,this.renderer.updateProjection({svg:this.svg,projection:this.projection}),this.layerManager.rerenderAllLayers()}resize(t,e){this.width=t,this.height=e,this.svg.attr("width",t).attr("height",e),this.renderer.updateProjection({svg:this.svg,projection:this.projection}),this.layerManager.rerenderAllLayers()}fitBounds(t,e=20){const[[r,s],[a,o]]=this.projection.invert?[this.projection([t[0],t[3]]),this.projection([t[2],t[1]])]:[[0,0],[this.width,this.height]],i=Math.min((this.width-2*e)/Math.abs(a-r),(this.height-2*e)/Math.abs(o-s)),n=[this.width/2-i*(r+a)/2,this.height/2-i*(s+o)/2];this.projection.scale(i).translate(n),this.renderer.updateProjection({svg:this.svg,projection:this.projection}),this.layerManager.rerenderAllLayers()}clearAllLayers(){this.layerManager.clearAllLayers()}getSVG(){return this.svg.node()}getProjection(){return this.projection}getLayerManager(){return this.layerManager}getSize(){return[this.width,this.height]}getLayerIds(){return this.layerManager.getLayerIds()}},t.DEFAULT_LAYER_STYLE=h,t.LayerManager=a,t.Renderer=s,t.VectorLayer=i,t.calculateBounds=n,t.calculateCenter=function(t){const[e,r,s,a]=n(t);return[(e+s)/2,(r+a)/2]},t.calculateDistance=function(t,e){const[r,s]=t,[a,o]=e,i=l(o-s),n=l(a-r),h=Math.sin(i/2)*Math.sin(i/2)+Math.cos(l(s))*Math.cos(l(o))*Math.sin(n/2)*Math.sin(n/2);return 6371*(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)))},t.darkenColor=function(t,e){const r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);if(!r)return t;const s=parseInt(r[1],16),a=parseInt(r[2],16),o=parseInt(r[3],16);return y(Math.round(s*(1-e)),Math.round(a*(1-e)),Math.round(o*(1-e)))},t.filterFeatures=function(t,e){return{type:"FeatureCollection",features:t.features.filter(e)}},t.getColorFromValue=function(t,e){t=Math.max(0,Math.min(1,t));const r=[...e].sort((t,e)=>t.stop-e.stop);if(t<=r[0].stop)return r[0].color;if(t>=r[r.length-1].stop)return r[r.length-1].color;for(let e=0;e<r.length-1;e++){const s=r[e],a=r[e+1];if(t>=s.stop&&t<=a.stop){const e=(t-s.stop)/(a.stop-s.stop);return u(s.color,a.color,e)}}return r[0].color},t.hexToRgba=function(t,e=1){const r=t.replace("#","");let s,a,o;if(3===r.length)s=parseInt(r[0]+r[0],16),a=parseInt(r[1]+r[1],16),o=parseInt(r[2]+r[2],16);else{if(6!==r.length)throw new Error(`Invalid hex color: ${t}`);s=parseInt(r.substr(0,2),16),a=parseInt(r.substr(2,2),16),o=parseInt(r.substr(4,2),16)}if(isNaN(s)||isNaN(a)||isNaN(o))throw new Error(`Invalid hex color: ${t}`);return`rgba(${s}, ${a}, ${o}, ${e})`},t.interpolateColors=u,t.isValidColor=function(t){if(!t||"string"!=typeof t)return!1;if(["red","green","blue","yellow","orange","purple","pink","brown","black","white","gray","grey","cyan","magenta","lime","maroon","navy","olive","silver","teal","aqua","fuchsia"].includes(t.toLowerCase()))return!0;if(/^#?([a-f\d]{3}|[a-f\d]{6})$/i.test(t))return!0;const e=t.match(/^rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.]+)\s*)?\)$/i);if(e){const t=parseInt(e[1]),r=parseInt(e[2]),s=parseInt(e[3]),a=e[5]?parseFloat(e[5]):1;if(t>=0&&t<=255&&r>=0&&r<=255&&s>=0&&s<=255&&a>=0&&a<=1)return!0}return!!/^hsla?\(\s*\d+\s*,\s*\d+%\s*,\s*\d+%\s*(,\s*[\d.]+\s*)?\)$/i.test(t)},t.lightenColor=function(t,e){const r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);if(!r)return t;const s=parseInt(r[1],16),a=parseInt(r[2],16),o=parseInt(r[3],16);return y(Math.round(s+(255-s)*e),Math.round(a+(255-a)*e),Math.round(o+(255-o)*e))},t.logTestResult=function(t,e=!1){console.log("=== 座標変換テスト結果 ==="),console.log(`総座標数: ${t.totalCoords}`),console.log(`正常座標数: ${t.normalCoords}`),console.log(`異常座標数: ${t.abnormalCoords}`),console.log(t.summary),e&&t.abnormalCoords>0&&(console.warn("異常値の詳細:"),t.abnormalDetails.forEach((t,e)=>{console.warn(`  ${e+1}. ${t.featureName}: [${t.originalCoord}] → [${t.projectedCoord.map(t=>t.toFixed(2))}] (${t.outOfBounds.x}, ${t.outOfBounds.y})`)}))},t.mergeStyles=c,t.normalizeStyle=function(t={}){return c(h,t)},t.rgbToHex=y,t.testProjectionBounds=function(t,e){try{let r=1/0,s=-1/0,a=1/0,o=-1/0;e.features.forEach(e=>{d(e.geometry,"",t,0,0,t=>{const[e,i]=t;r=Math.min(r,e),s=Math.max(s,e),a=Math.min(a,i),o=Math.max(o,i)})});const i=[[r,a],[s,a],[s,o],[r,o]],n=i.map(e=>t(e)).filter(t=>null!==t);return n.length===i.length?{isValid:!0,message:"✅ 投影法の境界設定は正常です"}:{isValid:!1,message:`⚠️ 投影法で変換できない座標があります (${i.length-n.length}個)`}}catch(t){return{isValid:!1,message:`❌ 境界テスト中にエラーが発生しました: ${t instanceof Error?t.message:"Unknown error"}`}}},t.testProjectionTransform=function(t,e,r,s){let a=0,o=0;const i=[];s.features.forEach(s=>{const n=s.properties?.name||`Feature ${s.id||"unknown"}`;d(s.geometry,n,r,t,e,(t,e,r,s,n)=>{const l=r([t[0],t[1]]);l&&(a++,(l[0]<0||l[0]>s||l[1]<0||l[1]>n)&&(o++,i.push({featureName:e,originalCoord:[t[0],t[1]],projectedCoord:[l[0],l[1]],outOfBounds:{x:l[0]<0?"x < 0":l[0]>s?`x > ${s}`:"x OK",y:l[1]<0?"y < 0":l[1]>n?`y > ${n}`:"y OK"}})))})});const n=0===o;return{totalCoords:a,normalCoords:a-o,abnormalCoords:o,abnormalDetails:i,isValid:n,summary:n?`✅ すべての座標が正常範囲内です (0-${t} × 0-${e})`:`⚠️ ${o}個の座標が範囲外です`}},t.toDegrees=function(t){return t*(180/Math.PI)},t.toRadians=l,t.validateGeoJSON=function(t){const e=[];return t&&"object"==typeof t?("FeatureCollection"!==t.type&&e.push('Data type must be "FeatureCollection"'),Array.isArray(t.features)?t.features.forEach((t,r)=>{t&&"object"==typeof t?("Feature"!==t.type&&e.push(`Feature at index ${r} type must be "Feature"`),t.geometry&&"object"==typeof t.geometry||e.push(`Feature at index ${r} must have a geometry object`),t.properties&&"object"==typeof t.properties||e.push(`Feature at index ${r} must have a properties object`)):e.push(`Feature at index ${r} must be an object`)}):e.push("Features must be an array"),{valid:0===e.length,errors:e}):(e.push("Data must be an object"),{valid:!1,errors:e})}});
//# sourceMappingURL=cartography.umd.js.map
