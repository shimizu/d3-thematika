import{B as O,c as H,M as U,G as J}from"./story-helpers-DJRNUMPK.js";import{G as _}from"./geojson-layer-DyQVU0vZ.js";import*as b from"d3-geo";import"d3-selection";var y=63710088e-1,V={centimeters:y*100,centimetres:y*100,degrees:360/(2*Math.PI),feet:y*3.28084,inches:y*39.37,kilometers:y/1e3,kilometres:y/1e3,meters:y,metres:y,miles:y/1609.344,millimeters:y*1e3,millimetres:y*1e3,nauticalmiles:y/1852,radians:1,yards:y*1.0936};function T(e,t,n={}){const i={type:"Feature"};return(n.id===0||n.id)&&(i.id=n.id),n.bbox&&(i.bbox=n.bbox),i.properties=t||{},i.geometry=e,i}function j(e,t,n={}){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!B(e[0])||!B(e[1]))throw new Error("coordinates must contain numbers");return T({type:"Point",coordinates:e},t,n)}function z(e,t,n={}){if(e.length<2)throw new Error("coordinates must be an array of two or more positions");return T({type:"LineString",coordinates:e},t,n)}function X(e,t="kilometers"){const n=V[t];if(!n)throw new Error(t+" units is invalid");return e*n}function Y(e,t="kilometers"){const n=V[t];if(!n)throw new Error(t+" units is invalid");return e/n}function R(e){return e%(2*Math.PI)*180/Math.PI}function m(e){return e%360*Math.PI/180}function B(e){return!isNaN(e)&&e!==null&&!Array.isArray(e)}function v(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return[...e.geometry.coordinates];if(e.type==="Point")return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function K(e){return e.type==="Feature"?e.geometry:e}function D(e,t,n={}){if(n.final===!0)return Q(e,t);const i=v(e),r=v(t),s=m(i[0]),a=m(r[0]),l=m(i[1]),o=m(r[1]),c=Math.sin(a-s)*Math.cos(o),p=Math.cos(l)*Math.sin(o)-Math.sin(l)*Math.cos(o)*Math.cos(a-s);return R(Math.atan2(c,p))}function Q(e,t){let n=D(t,e);return n=(n+180)%360,n}function Z(e,t,n,i={}){const r=v(e),s=m(r[0]),a=m(r[1]),l=m(n),o=Y(t,i.units),c=Math.asin(Math.sin(a)*Math.cos(o)+Math.cos(a)*Math.sin(o)*Math.cos(l)),p=s+Math.atan2(Math.sin(l)*Math.sin(o)*Math.cos(a),Math.cos(o)-Math.sin(a)*Math.sin(c)),u=R(p),f=R(c);return j([u,f],i.properties)}function $(e,t,n={}){var i=v(e),r=v(t),s=m(r[1]-i[1]),a=m(r[0]-i[0]),l=m(i[1]),o=m(r[1]),c=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(a/2),2)*Math.cos(l)*Math.cos(o);return X(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),n.units)}function G(e,t,n={}){const r=K(e).coordinates;let s=0;for(let a=0;a<r.length&&!(t>=s&&a===r.length-1);a++)if(s>=t){const l=t-s;if(l){const o=D(r[a],r[a-1])-180;return Z(r[a],l,o,n)}else return j(r[a])}else s+=$(r[a],r[a+1],n);return j(r[r.length-1])}function q(e,t,n){if(e!==null)for(var i,r,s,a,l,o,c,p=0,u=0,f,d=e.type,h=d==="FeatureCollection",x=d==="Feature",P=h?e.features.length:1,L=0;L<P;L++){c=h?e.features[L].geometry:x?e.geometry:e,f=c?c.type==="GeometryCollection":!1,l=f?c.geometries.length:1;for(var C=0;C<l;C++){var g=0,w=0;if(a=f?c.geometries[C]:c,a!==null){o=a.coordinates;var S=a.type;switch(p=0,S){case null:break;case"Point":if(t(o,u,L,g,w)===!1)return!1;u++,g++;break;case"LineString":case"MultiPoint":for(i=0;i<o.length;i++){if(t(o[i],u,L,g,w)===!1)return!1;u++,S==="MultiPoint"&&g++}S==="LineString"&&g++;break;case"Polygon":case"MultiLineString":for(i=0;i<o.length;i++){for(r=0;r<o[i].length-p;r++){if(t(o[i][r],u,L,g,w)===!1)return!1;u++}S==="MultiLineString"&&g++,S==="Polygon"&&w++}S==="Polygon"&&g++;break;case"MultiPolygon":for(i=0;i<o.length;i++){for(w=0,r=0;r<o[i].length;r++){for(s=0;s<o[i][r].length-p;s++){if(t(o[i][r][s],u,L,g,w)===!1)return!1;u++}w++}g++}break;case"GeometryCollection":for(i=0;i<a.geometries.length;i++)if(q(a.geometries[i],t)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function I(e,t){var n,i,r,s,a,l,o,c,p,u,f=0,d=e.type==="FeatureCollection",h=e.type==="Feature",x=d?e.features.length:1;for(n=0;n<x;n++){for(l=d?e.features[n].geometry:h?e.geometry:e,c=d?e.features[n].properties:h?e.properties:{},p=d?e.features[n].bbox:h?e.bbox:void 0,u=d?e.features[n].id:h?e.id:void 0,o=l?l.type==="GeometryCollection":!1,a=o?l.geometries.length:1,r=0;r<a;r++){if(s=o?l.geometries[r]:l,s===null){if(t(null,f,c,p,u)===!1)return!1;continue}switch(s.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(t(s,f,c,p,u)===!1)return!1;break}case"GeometryCollection":{for(i=0;i<s.geometries.length;i++)if(t(s.geometries[i],f,c,p,u)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}f++}}function ee(e,t){I(e,function(n,i,r,s,a){var l=n===null?null:n.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return t(T(n,r,{bbox:s,id:a}),i,0)===!1?!1:void 0}var o;switch(l){case"MultiPoint":o="Point";break;case"MultiLineString":o="LineString";break;case"MultiPolygon":o="Polygon";break}for(var c=0;c<n.coordinates.length;c++){var p=n.coordinates[c],u={type:o,coordinates:p};if(t(T(u,r),i,c)===!1)return!1}})}function te(e,t){ee(e,function(n,i,r){var s=0;if(n.geometry){var a=n.geometry.type;if(!(a==="Point"||a==="MultiPoint")){var l,o=0,c=0,p=0;if(q(n,function(u,f,d,h,x){if(l===void 0||i>o||h>c||x>p){l=u,o=i,c=h,p=x,s=0;return}var P=z([l,u],n.properties);if(t(P,i,r,x,s)===!1)return!1;s++,l=u})===!1)return!1}}})}function re(e,t,n){var i=n,r=!1;return te(e,function(s,a,l,o,c){r===!1&&n===void 0?i=s:i=t(i,s,a,l,o,c),r=!0}),i}function W(e,t={}){return re(e,(n,i)=>{const r=i.geometry.coordinates;return n+$(r[0],r[1],t)},0)}class ne extends O{constructor(t){if(super(`line-text-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,t.attr||{},t.style||{}),this.data=Array.isArray(t.data)?{type:"FeatureCollection",features:t.data}:t.data,this.validateData(this.data),this.textProperty=t.textProperty||"text",this.position=t.position||"middle",this.placement=t.placement||"along",this.usePercentage=t.usePercentage!==!1,this.multiplePositions=t.multiplePositions,typeof t.dx=="function")this.dxFunction=t.dx;else{const n=t.dx||0;this.dxFunction=()=>n}if(typeof t.dy=="function")this.dyFunction=t.dy;else{const n=t.dy||0;this.dyFunction=()=>n}if(typeof t.rotate=="function")this.rotateFunction=t.rotate;else{const n=t.rotate||0;this.rotateFunction=()=>n}if(this.lengthAdjust=t.lengthAdjust||"spacing",this.alignmentBaseline=t.alignmentBaseline||"middle",this.textAnchor=t.textAnchor||"middle",typeof t.fontFamily=="function")this.fontFamilyFunction=t.fontFamily;else{const n=t.fontFamily||"メイリオ, Meiryo, 'ＭＳ Ｐゴシック', MS Gothic, sans-serif";this.fontFamilyFunction=()=>n}if(typeof t.fontSize=="function")this.fontSizeFunction=t.fontSize;else{const n=t.fontSize||16;this.fontSizeFunction=()=>n}if(typeof t.fontWeight=="function")this.fontWeightFunction=t.fontWeight;else{const n=t.fontWeight||"normal";this.fontWeightFunction=()=>n}}validateData(t){if(!t||t.type!=="FeatureCollection")throw new Error("LineTextLayer: データはFeatureCollectionである必要があります");if(!Array.isArray(t.features))throw new Error("LineTextLayer: featuresが配列ではありません");t.features.forEach((n,i)=>{if(!n.geometry)throw new Error(`LineTextLayer: フィーチャー[${i}]にgeometryが存在しません`);const r=n.geometry;if(r.type!=="LineString"&&r.type!=="MultiLineString")throw new Error(`LineTextLayer: フィーチャー[${i}]は'LineString'または'MultiLineString'である必要があります`)})}render(t){this.layerGroup=this.createLayerGroup(t),this.renderTexts()}on(t,n){this.layerGroup&&this.layerGroup.selectAll("text").on(t,function(i,r){n(i,r)})}setProjection(t){this.projection=t,this.layerGroup&&this.renderTexts()}renderTexts(){if(!this.layerGroup||!this.projection)return;this.layerGroup.selectAll("g.thematika-line-text-layer").remove();const t=[];this.data.features.forEach((r,s)=>{let a="";if(r.properties&&(a=r.properties[this.textProperty]||r.properties.name||""),!a)return;(this.multiplePositions||[this.position]).forEach((o,c)=>{const p=this.calculateTextPositions(r,s,o,a,c);p&&t.push(p)})});const i=this.layerGroup.append("g").attr("class","thematika-line-text-layer").selectAll("text").data(t).enter().append("text").attr("x",r=>r.x).attr("y",r=>r.y).attr("dx",r=>r.dx).attr("dy",r=>r.dy).attr("transform",r=>r.rotation!==0?`rotate(${r.rotation}, ${r.x}, ${r.y})`:null).attr("lengthAdjust",this.lengthAdjust).attr("alignment-baseline",this.alignmentBaseline).attr("text-anchor",this.textAnchor).attr("font-family",r=>r.fontFamily).attr("font-size",r=>r.fontSize).attr("font-weight",r=>r.fontWeight).attr("class",r=>{const s="thematika-line-text",a=this.attr.className||"",l=r.feature.properties?.class||"";return[s,a,l].filter(Boolean).join(" ")}).text(r=>r.text);this.applyAllStylesToElements(i,this.layerGroup)}calculateTextPositions(t,n,i,r,s){const a=t.geometry;if(a.type==="LineString")return this.calculateLineStringTextPosition(a.coordinates,t,n,i,r,s);if(a.type==="MultiLineString"){const l=a.coordinates[0];return this.calculateLineStringTextPosition(l,t,n,i,r,s)}return null}calculateLineStringTextPosition(t,n,i,r,s,a){if(t.length<2)return null;try{const l=z(t);let o;if(r==="start")o=0;else if(r==="middle")o=.5;else if(r==="end")o=1;else if(typeof r=="number")if(this.usePercentage)o=Math.max(0,Math.min(1,r));else{const d=W(l,{units:"kilometers"});o=Math.max(0,Math.min(1,r/d))}else o=.5;const p=G(l,o*W(l,{units:"kilometers"}),{units:"kilometers"}).geometry.coordinates,u=this.projection?this.projection(p):null;if(!u)return null;let f=0;return this.placement==="along"?f=this.calculateLineRotation(t,o):this.placement==="perpendicular"&&(f=this.calculateLineRotation(t,o)+90),f+=this.rotateFunction(n,i),{feature:n,featureIndex:i,positionIndex:a,text:String(s),x:u[0],y:u[1],dx:this.dxFunction(n,i),dy:this.dyFunction(n,i),rotation:f,fontFamily:this.fontFamilyFunction(n,i),fontSize:this.fontSizeFunction(n,i),fontWeight:this.fontWeightFunction(n,i)}}catch(l){return console.warn("LineTextLayer: テキスト位置の計算でエラーが発生しました:",l),null}}calculateLineRotation(t,n){if(t.length<2)return 0;try{const i=z(t),r=W(i,{units:"kilometers"}),s=.001,a=Math.max(0,n-s),l=Math.min(1,n+s),o=G(i,a*r,{units:"kilometers"}),c=G(i,l*r,{units:"kilometers"}),p=o.geometry.coordinates,u=c.geometry.coordinates,f=this.projection?this.projection(p):null,d=this.projection?this.projection(u):null;if(!f||!d)return 0;const h=d[0]-f[0],x=d[1]-f[1];return Math.atan2(x,h)*180/Math.PI}catch(i){return console.warn("LineTextLayer: 回転角度の計算でエラーが発生しました:",i),0}}getData(){return this.data}}const le={title:"Layers/LineTextLayer",tags:["autodocs"],parameters:{docs:{description:{component:"LineString/MultiLineStringジオメトリに沿ってテキストラベルを配置するレイヤー。ライン沿い、水平、垂直配置をサポートします。"}}},argTypes:{textProperty:{control:{type:"text"},description:"テキスト取得元プロパティ名",defaultValue:"text"},position:{control:{type:"select"},options:["start","middle","end",.25,.75],description:"テキストの配置位置",defaultValue:"middle"},placement:{control:{type:"radio"},options:["along","horizontal","perpendicular"],description:"テキストの配置方向",defaultValue:"along"},usePercentage:{control:{type:"boolean"},description:"パーセンテージベースの位置指定",defaultValue:!0},dx:{control:{type:"range",min:-30,max:30,step:2},description:"X方向オフセット",defaultValue:0},dy:{control:{type:"range",min:-30,max:30,step:2},description:"Y方向オフセット",defaultValue:0},rotate:{control:{type:"range",min:0,max:360,step:15},description:"追加の回転角度",defaultValue:0},lengthAdjust:{control:{type:"radio"},options:["spacing","spacingAndGlyphs"],description:"テキスト長さ調整",defaultValue:"spacing"},alignmentBaseline:{control:{type:"select"},options:["auto","baseline","middle","central","hanging","alphabetic"],description:"ベースライン位置",defaultValue:"middle"},textAnchor:{control:{type:"radio"},options:["start","middle","end"],description:"テキストアンカー",defaultValue:"middle"},fontFamily:{control:{type:"text"},description:"フォントファミリー",defaultValue:"Arial, sans-serif"},fontSize:{control:{type:"range",min:8,max:24,step:2},description:"フォントサイズ",defaultValue:12},fontWeight:{control:{type:"select"},options:["normal","bold","lighter","300","400","600","700"],description:"フォントウェイト",defaultValue:"normal"},fill:{control:{type:"color"},description:"テキスト色",defaultValue:"#2c3e50"},stroke:{control:{type:"color"},description:"アウトライン色",defaultValue:"#ffffff"},strokeWidth:{control:{type:"range",min:0,max:4,step:.5},description:"アウトライン幅",defaultValue:1},projection:{control:{type:"select"},options:["naturalEarth1","mercator","equirectangular","orthographic"],description:"投影法",defaultValue:"naturalEarth1"},dataType:{control:{type:"radio"},options:["rivers","roads","borders","railways"],description:"データタイプ",defaultValue:"rivers"},showLines:{control:{type:"boolean"},description:"ライン自体も表示",defaultValue:!0}}};function N(e){switch(e){case"rivers":return{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[130,33],[132,34],[135,35],[138,36],[140,36.5]]},properties:{text:"信濃川",name:"Shinano River",type:"river"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[136,35],[137,34.5],[138,34],[139,34.2],[140,35]]},properties:{text:"富士川",name:"Fuji River",type:"river"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[-5,51],[-3,51.5],[-1,52],[1,52.2],[2,51.8]]},properties:{text:"Thames",name:"River Thames",type:"river"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[2,49],[3,48.5],[4,48.8],[5,49.2],[6,49]]},properties:{text:"Seine",name:"River Seine",type:"river"}}]};case"roads":return{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[139.7,35.7],[139.8,35.6],[140,35.5],[140.3,35.4]]},properties:{text:"国道1号",name:"Route 1",type:"highway"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[139.5,35.8],[139.7,35.7],[139.9,35.6],[140.1,35.5]]},properties:{text:"中央道",name:"Chuo Expressway",type:"expressway"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[-2,51],[0,51.5],[2,52],[4,51.8]]},properties:{text:"A1",name:"A1 Motorway",type:"motorway"}}]};case"borders":return{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[130,38],[132,38.5],[134,39],[136,39.2],[138,39]]},properties:{text:"日本海",name:"Sea of Japan",type:"border"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[-1,50],[0,50.8],[1,51.5],[2,51]]},properties:{text:"English Channel",name:"English Channel",type:"border"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[5,49],[6,48.5],[7,48],[8,47.5],[9,47]]},properties:{text:"Rhine",name:"Rhine River",type:"border"}}]};case"railways":return{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"LineString",coordinates:[[139.7,35.7],[137,35],[135.5,34.7],[133,34.4]]},properties:{text:"東海道新幹線",name:"Tokaido Shinkansen",type:"railway"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[139.7,35.7],[140.5,37],[141,38.5],[141.3,40.8]]},properties:{text:"東北新幹線",name:"Tohoku Shinkansen",type:"railway"}},{type:"Feature",geometry:{type:"LineString",coordinates:[[-1,51.5],[0,51],[1,50.8],[3,50.8],[4,50.5]]},properties:{text:"Eurostar",name:"Eurostar",type:"railway"}}]};default:return N("rivers")}}function ie(e,t,n){let i;switch(e){case"mercator":i=b.geoMercator();break;case"equirectangular":i=b.geoEquirectangular();break;case"orthographic":i=b.geoOrthographic().rotate([-20,-10]);break;case"naturalEarth1":default:i=b.geoNaturalEarth1();break}return i.scale(120).translate([t/2,n/2])}function E(e){const t=H(),n=800,i=500,r=ie(e.projection,n,i),s=new U({container:"#map",width:n,height:i,projection:r,backgroundColor:"#f0f8ff"}),a=new J({step:[30,30],attr:{fill:"none",stroke:"#eee",strokeWidth:.5,strokeDasharray:"2,2",opacity:.7}});s.addLayer("graticule",a);const l=N(e.dataType);if(e.showLines){const p=new _({data:l,attr:{fill:"none",stroke:u=>{switch(u.properties.type){case"river":return"#3498db";case"highway":case"expressway":case"motorway":return"#e74c3c";case"border":return"#9b59b6";case"railway":return"#2ecc71";default:return"#34495e"}},strokeWidth:u=>{switch(u.properties.type){case"river":return 2;case"highway":case"expressway":case"motorway":return 3;case"border":return 2;case"railway":return 2;default:return 1}},strokeDasharray:u=>{switch(u.properties.type){case"border":return"5,5";case"railway":return"10,5";default:return"none"}},opacity:.7}});s.addLayer("lines",p)}const o=new ne({data:l,textProperty:e.textProperty,position:e.position,placement:e.placement,usePercentage:e.usePercentage,dx:e.dx,dy:e.dy,rotate:e.rotate,lengthAdjust:e.lengthAdjust,alignmentBaseline:e.alignmentBaseline,textAnchor:e.textAnchor,fontFamily:e.fontFamily,fontSize:e.fontSize,fontWeight:e.fontWeight,attr:{fill:e.fill,stroke:e.stroke,strokeWidth:e.strokeWidth}});s.addLayer("text",o),o.on("click",(p,u)=>{console.log("Text clicked:",u),alert(`Clicked: ${u.properties?.text||u.properties?.name||"Unknown"}`)}),o.on("mouseover",(p,u)=>{console.log("Text hover:",u)});const c=document.createElement("div");return c.innerHTML=`
    <p><strong>LineTextLayerデモ</strong></p>
    <p>データ: ${e.dataType}</p>
    <p>配置: ${e.placement} / ${e.position}</p>
    <p>アンカー: ${e.textAnchor}</p>
  `,c.style.position="absolute",c.style.top="10px",c.style.left="10px",c.style.background="rgba(255,255,255,0.9)",c.style.padding="10px",c.style.borderRadius="4px",c.style.fontSize="12px",c.style.pointerEvents="none",t.appendChild(c),t}const M={args:{textProperty:"text",position:"middle",placement:"along",usePercentage:!0,dx:0,dy:0,rotate:0,lengthAdjust:"spacing",alignmentBaseline:"middle",textAnchor:"middle",fontFamily:"Arial, sans-serif",fontSize:12,fontWeight:"normal",fill:"#2c3e50",stroke:"#ffffff",strokeWidth:1,projection:"naturalEarth1",dataType:"rivers",showLines:!0},render:E},k={args:{textProperty:"text",position:"middle",placement:"along",usePercentage:!0,dx:0,dy:-8,rotate:0,lengthAdjust:"spacing",alignmentBaseline:"middle",textAnchor:"middle",fontFamily:"Gothic, sans-serif",fontSize:11,fontWeight:"bold",fill:"#27ae60",stroke:"#ffffff",strokeWidth:2,projection:"naturalEarth1",dataType:"railways",showLines:!0},render:E},A={args:{textProperty:"text",position:.25,placement:"horizontal",usePercentage:!0,dx:5,dy:-5,rotate:0,lengthAdjust:"spacingAndGlyphs",alignmentBaseline:"baseline",textAnchor:"start",fontFamily:"Arial, sans-serif",fontSize:10,fontWeight:"600",fill:"#e74c3c",stroke:"#ffffff",strokeWidth:1.5,projection:"mercator",dataType:"roads",showLines:!0},render:E},F={args:{textProperty:"text",position:"end",placement:"perpendicular",usePercentage:!0,dx:0,dy:0,rotate:45,lengthAdjust:"spacing",alignmentBaseline:"middle",textAnchor:"middle",fontFamily:"Times, serif",fontSize:14,fontWeight:"bold",fill:"#8e44ad",stroke:"#f8f9fa",strokeWidth:2,projection:"orthographic",dataType:"borders",showLines:!1},render:E};M.parameters={...M.parameters,docs:{...M.parameters?.docs,source:{originalSource:`{
  args: {
    textProperty: 'text',
    position: 'middle',
    placement: 'along',
    usePercentage: true,
    dx: 0,
    dy: 0,
    rotate: 0,
    lengthAdjust: 'spacing',
    alignmentBaseline: 'middle',
    textAnchor: 'middle',
    fontFamily: 'Arial, sans-serif',
    fontSize: 12,
    fontWeight: 'normal',
    fill: '#2c3e50',
    stroke: '#ffffff',
    strokeWidth: 1,
    projection: 'naturalEarth1',
    dataType: 'rivers',
    showLines: true
  },
  render: createLineTextStory
}`,...M.parameters?.docs?.source}}};k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:`{
  args: {
    textProperty: 'text',
    position: 'middle',
    placement: 'along',
    usePercentage: true,
    dx: 0,
    dy: -8,
    rotate: 0,
    lengthAdjust: 'spacing',
    alignmentBaseline: 'middle',
    textAnchor: 'middle',
    fontFamily: 'Gothic, sans-serif',
    fontSize: 11,
    fontWeight: 'bold',
    fill: '#27ae60',
    stroke: '#ffffff',
    strokeWidth: 2,
    projection: 'naturalEarth1',
    dataType: 'railways',
    showLines: true
  },
  render: createLineTextStory
}`,...k.parameters?.docs?.source}}};A.parameters={...A.parameters,docs:{...A.parameters?.docs,source:{originalSource:`{
  args: {
    textProperty: 'text',
    position: 0.25,
    placement: 'horizontal',
    usePercentage: true,
    dx: 5,
    dy: -5,
    rotate: 0,
    lengthAdjust: 'spacingAndGlyphs',
    alignmentBaseline: 'baseline',
    textAnchor: 'start',
    fontFamily: 'Arial, sans-serif',
    fontSize: 10,
    fontWeight: '600',
    fill: '#e74c3c',
    stroke: '#ffffff',
    strokeWidth: 1.5,
    projection: 'mercator',
    dataType: 'roads',
    showLines: true
  },
  render: createLineTextStory
}`,...A.parameters?.docs?.source}}};F.parameters={...F.parameters,docs:{...F.parameters?.docs,source:{originalSource:`{
  args: {
    textProperty: 'text',
    position: 'end',
    placement: 'perpendicular',
    usePercentage: true,
    dx: 0,
    dy: 0,
    rotate: 45,
    lengthAdjust: 'spacing',
    alignmentBaseline: 'middle',
    textAnchor: 'middle',
    fontFamily: 'Times, serif',
    fontSize: 14,
    fontWeight: 'bold',
    fill: '#8e44ad',
    stroke: '#f8f9fa',
    strokeWidth: 2,
    projection: 'orthographic',
    dataType: 'borders',
    showLines: false
  },
  render: createLineTextStory
}`,...F.parameters?.docs?.source}}};const ce=["Rivers","Railways","RoadsHorizontal","BordersPerpendicular"];export{F as BordersPerpendicular,k as Railways,M as Rivers,A as RoadsHorizontal,ce as __namedExportsOrder,le as default};
